{
  // see https://www.typescriptlang.org/tsconfig to better understand tsconfigs
  "include": ["./src/**/*", "types", "src/commonTypes.d.ts"],
  "exclude": ["./src/public/"],
  "compilerOptions": {
    "strict": true,
    "module": "commonjs",
    "resolveJsonModule": true,
    "lib": ["esnext"],
    "importHelpers": true,
    // output .d.ts declaration files for consumers
    "declaration": false,
    // output .js.map sourcemap files for consumers
    "sourceMap": false,
    "baseUrl": "./",
    "rootDir": "./src",
    "outDir": "./build",
    "allowJs": true,
    "removeComments": true,
    // linter checks for common issues; will check all code paths in a function to ensure they return a value
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    // noUnused* overlap with @typescript-eslint/no-unused-vars, can disable if duplicative
    "noUnusedLocals": true,
    "noUnusedParameters": false,
    // use Node's module resolution algorithm, instead of the legacy TS one
    "moduleResolution": "node",
    // interop between ESM and CJS modules. Recommended by TS
    "esModuleInterop": true,
    // significant perf increase by skipping checking .d.ts files, particularly those in node_modules. Recommended by TS
    "skipLibCheck": true,
    // error out if import and file system have a casing mismatch. Recommended by TS
    "forceConsistentCasingInFileNames": true,
    // it is commonly used when type-checking separately with `tsc`
    "noEmit": false,
    "target": "es2019",
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    "types": [
      "node"
    ],
    "typeRoots": [
      "node_modules/@types"
    ]
  }
}
